<template>
  <view class="container splatfest-container">
    <view class="splatfest-wrap card-wrap stripe-background">
      <view class="card-title splatfest-title">
        <view>
          <splatfest-logo :alpha="list[0].colors.alpha.css_rgb" :bravo="list[0].colors.bravo.css_rgb"></splatfest-logo>
          <text class="splatoon">Splatfest</text>
        </view>
        <icon class="splatfest-close-icon" @tap="backToIndex" type="clear" size="24" color="#ffffff" />
      </view>
      <view class="splatfest-hint">
        <view class="splatfest-region-picker">
          <text>祭典区域：</text>
          <region-picker></region-picker>
        </view>
      </view>
      <loader wx:if="{{list.length===0}}"></loader>
      <view wx:else class="splatfest-lists">
        <repeat for="{{list}}" key="index">
          <splatfest-card :detail="item"></splatfest-card>
        </repeat>
      </view>
    </view>
    <timer @timer-update.user="timerUpdate"></timer>
  </view>
</template>
<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'

import { updateSplatfest } from '../store/actions'

import loader from '@/components/loader'
import timer from '@/components/timer'
import splatfestCard from '@/components/splatfest-card'
import splatfestLogo from '@/components/splatfest-logo'
import regionPicker from '@/components/region-picker'

@connect(
  {
    splatfest(state) {
      return state.splatfest
    },
    region(state) {
      return state.region
    }
  },
  { updateSplatfest }
)
export default class Splatfest extends wepy.page {
  config = {
    navigationBarTitleText: '祭典',
    enablePullDownRefresh: true
  }

  components = {
    loader,
    timer,
    'splatfest-card': splatfestCard,
    'splatfest-logo': splatfestLogo,
    'region-picker': regionPicker
  }

  watch = {
    splatfest() {
      this.loadSplatfest()
    },
    region() {
      this.list = []
      this.$apply()
      this.methods.updateSplatfest()
    }
  }

  data = {
    list: []
  }

  methods = {
    backToIndex() {
      wx.switchTab({
        url: '/pages/index'
      })
    },
    timerUpdate() {
      this.startUpdate()
    }
  }

  loadSplatfest() {
    this.list = this.splatfest.splatfest.list
    this.$apply()
    this.updateLogo()
    wx.stopPullDownRefresh()
  }

  updateLogo() {
    if (this.list.length) {
      const alpha = this.list[0].colors.alpha.css_rgb
      const bravo = this.list[0].colors.bravo.css_rgb
      this.$broadcast('update-logo', {
        alpha,
        bravo
      })
    }
  }

  startUpdate() {
    this.methods.updateSplatfest()
  }

  onLoad() {
    this.startUpdate()
  }

  onShareAppMessage() {}

  onPullDownRefresh() {
    this.startUpdate()
  }
}
</script>
<style lang="less">
.splatfest-container {
  margin-top: 20px;
  margin-bottom: 20px;
}
.splatfest-wrap {
  color: white;
  background-color: #aaaaaa;
  transform: none;
  padding-bottom: 30px;
}
.splatfest-title {
  justify-content: space-between;
  margin-top: 10px;
  margin-bottom: 15px;
  view {
    display: flex;
    align-items: center;
    text {
      font-size: 56rpx;
      margin-left: 10px;
      line-height: 1em;
    }
  }
  .splatfest-close-icon {
    display: block;
    border-radius: 50%;
    box-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
  }
}
.splatfest-hint {
  font-size: 28rpx;
  text-shadow: 1px 1px 0 #000;
  color: #f0f0f0;
}
.splatfest-lists {
  margin-top: -5px;
}
.splatfest-card {
  transform: rotate(0.8deg);
  &:nth-child(even) {
    transform: rotate(-0.8deg);
  }
}
.splatfest-region-picker {
  display: flex;
}
</style>
