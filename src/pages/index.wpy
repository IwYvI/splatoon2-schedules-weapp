<style lang="less">
.index-container {
  margin-top: 10px;
  margin-bottom: 10px;
}
.index-schedule-card {
  transform: rotate(0.5deg);
  &:nth-child(even) {
    transform: rotate(-0.5deg);
  }
}
.index-salmonrun-banner {
  width: 100%;
  text-align: center;
  color: #ffffff;
  font-size: 32rpx;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  navigator {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-top: 5px;
    padding-bottom: 5px;
    image {
      width: 25px;
      height: 25px;
      margin-right: 5px;
    }
    text {
      line-height: 1em;
    }
  }
}
</style>
<template>
  <view>
    <view wx:if="{{latestSalmonRunOpen}}" class="index-salmonrun-banner circle-background">
      <navigator url="salmonrun" open-type="switchTab">
        <image src="../assets/img/salmon-run.png"></image>
        <text class="splatoon">海産招募中...</text>
      </navigator>
    </view>
    <view class="container index-container">
      <regular-card class="index-schedule-card" mode="regular" :list.sync="regularList" />
      <gachi-card class="index-schedule-card" mode="gachi" :list.sync="gachiList" />
      <league-card class="index-schedule-card" mode="league" :list.sync="leagueList" />
      <timer @timer-update.user="timerUpdate"></timer>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'

import { updateSchedule, updateSalmonRun } from '../store/actions'

import scheduleCard from '@/components/schedule-card'
import timer from '@/components/timer'

@connect(
  {
    schedule(state) {
      return state.schedule
    },
    salmonrun(state) {
      return state.salmonrun
    }
  },
  { updateSchedule, updateSalmonRun }
)
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '乌贼日历',
    enablePullDownRefresh: true
  }

  components = {
    'regular-card': scheduleCard,
    'gachi-card': scheduleCard,
    'league-card': scheduleCard,
    timer
  }

  data = {
    regularList: [],
    gachiList: [],
    leagueList: [],
    latestSalmonRunOpen: false
  }

  watch = {
    schedule() {
      this.loadSchedule()
    },
    salmonrun() {
      this.loadSalmonRun()
    }
  }

  computed = {}

  methods = {
    timerUpdate() {
      this.startUpdate()
    }
  }

  loadSchedule() {
    this.regularList = this.schedule.regular.list
    this.gachiList = this.schedule.gachi.list
    this.leagueList = this.schedule.league.list
    this.$apply()
    wx.stopPullDownRefresh()
  }

  loadSalmonRun() {
    const latest = this.salmonrun.salmonRun.list[0]
    if (Number(`${latest.start_time}000` < Date.now())) {
      this.latestSalmonRunOpen = true
    } else {
      this.latestSalmonRunOpen = false
    }
  }

  startUpdate() {
    this.methods.updateSchedule()
    this.methods.updateSalmonRun()
  }

  onLoad() {
    this.startUpdate()
  }

  onShow() {
    this.$broadcast('start-timer')
  }

  onHide() {
    this.$broadcast('stop-timer')
  }

  onShareAppMessage() {}

  onPullDownRefresh() {
    this.startUpdate()
  }
}
</script>
